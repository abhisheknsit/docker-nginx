FROM behance/docker-base:1.6
MAINTAINER Bryan Latten <latten@adobe.com>

ENV CONTAINER_ROLE=web \
    CONTAINER_PORT=8080 \
    CONF_NGINX_SITE="/etc/nginx/sites-available/default" \
    CONF_NGINX_SERVER="/etc/nginx/nginx.conf" \
    NOT_ROOT_USER=www-data \
    S6_OVERRIDE=1 \
    TINI_VERSION=v0.14.0

# Using a non-privileged port to prevent having to use setcap internally
EXPOSE ${CONTAINER_PORT}

STOPSIGNAL SIGQUIT

# Use TINI (https://github.com/krallin/tini) to manage PID 1, reap zombies, and transfer signals
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
RUN chmod +x /tini

# - Update security packages, only
RUN /bin/bash -e /security_updates.sh && \
    # Install pre-reqs \
    apt-get install --no-install-recommends -yqq \
        software-properties-common \
    && \
    # Install latest nginx (development PPA is actually mainline development) \
    add-apt-repository ppa:nginx/development -y && \
    apt-get update -yqq && \
    apt-get install -yqq --no-install-recommends \
        nginx-light \
    && \
    # Perform cleanup, ensure unnecessary packages are removed \
    apt-get remove --purge -yq \
        manpages \
        manpages-dev \
        man-db \
        patch \
        make \
        unattended-upgrades \
        python* \
    && \
    /bin/bash -e /clean.sh

# Overlay the root filesystem from this repo
COPY ./container/root /

# Set nginx to listen on defined port
# NOTE: order of operations is important, new config had to already installed from repo (above)
RUN sed -i "s/listen [0-9]*;/listen ${CONTAINER_PORT};/" $CONF_NGINX_SITE && \
    # Make temp directory for .nginx runtime files, re-own for new user
    echo "#!/bin/bash\nexec nginx -g \"daemon off;\"" > /run.d/99a-nginx.sh && \
    chown -R $NOT_ROOT_USER:$NOT_ROOT_USER /run.d && \
    mkdir /tmp/.nginx && \
    chown -R $NOT_ROOT_USER:$NOT_ROOT_USER /tmp/.nginx && \
    chown -R $NOT_ROOT_USER:$NOT_ROOT_USER /etc/nginx && \
    chown -R $NOT_ROOT_USER:$NOT_ROOT_USER /etc/services-available

# Ensure user is created/known by docker
USER $NOT_ROOT_USER

RUN goss -g /tests/nginx/base.goss.yaml validate && \
    /aufs_hack.sh

ENTRYPOINT ["/tini", "--"]

# Altered startup script to JUST execute the run.d portion, not start S6 process tree
CMD ["/bin/bash", "/run-d.sh"]
